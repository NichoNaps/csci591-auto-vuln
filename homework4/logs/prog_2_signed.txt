signed programs/prog_2.w3a
Initializing Line  1: ('assign_num', 'x', 0)
Initializing Line  2: ('if_goto', 'x', '<', 0, 5)
Initializing Line  3: ('assign_num', 'x', 1)
Initializing Line  4: ('goto', 2)
Initializing Line  5: ('halt',)


########## Running on line 1: ('assign_num', 'x', 0)
Flow Input: {'x': 'BOTTOM'}
Flow Outputs: [{'x': 'Z'}]

Added successor to self.worklist 2: ('if_goto', 'x', '<', 0, 5) with inputs: {'x': 'Z'}
Already in worklist


########## Running on line 2: ('if_goto', 'x', '<', 0, 5)
Flow Input: {'x': 'Z'}
Flow Outputs: [{'x': 'N'}, {'x': 'Z'}]

Added successor to self.worklist 5: ('halt',) with inputs: {'x': 'N'}
Already in worklist
Added successor to self.worklist 3: ('assign_num', 'x', 1) with inputs: {'x': 'Z'}
Already in worklist


########## Running on line 3: ('assign_num', 'x', 1)
Flow Input: {'x': 'Z'}
Flow Outputs: [{'x': 'P'}]

Added successor to self.worklist 4: ('goto', 2) with inputs: {'x': 'P'}
Already in worklist


########## Running on line 4: ('goto', 2)
Flow Input: {'x': 'P'}
Flow Outputs: [{'x': 'P'}]

Added successor to self.worklist 2: ('if_goto', 'x', '<', 0, 5) with inputs: {'x': 'TOP'}


########## Running on line 2: ('if_goto', 'x', '<', 0, 5)
Flow Input: {'x': 'TOP'}
Flow Outputs: [{'x': 'N'}, {'x': 'P'}]

Added successor to self.worklist 3: ('assign_num', 'x', 1) with inputs: {'x': 'TOP'}


########## Running on line 3: ('assign_num', 'x', 1)
Flow Input: {'x': 'TOP'}
Flow Outputs: [{'x': 'P'}]



########## Running on line 5: ('halt',)
Flow Input: {'x': 'N'}
Flow Outputs: [{'x': 'N'}]

instr | worklist  | abstract val 
---------------------------------
0     | 1,2,3,4,5 | x->BOTTOM    
1     | 2,3,4,5   | x->Z         
2     | 3,4,5     | x->N AND x->Z
3     | 4,5       | x->P         
4     | 5         | x->P         
2     | 5         | x->N AND x->P
3     | 5         | x->P         
5     | empty     | x->N         
